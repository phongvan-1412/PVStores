// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Models;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(PVStoresContext))]
    [Migration("20230309080817_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplication1.Models.Account", b =>
                {
                    b.Property<int>("acc_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("acc_id"));

                    b.Property<string>("acc_birth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("acc_deli_address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("acc_email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("acc_history")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("acc_image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("acc_image_base64")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("acc_ip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("acc_location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("acc_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("acc_password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("acc_phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("acc_status")
                        .HasColumnType("int");

                    b.Property<int>("acc_type")
                        .HasColumnType("int");

                    b.HasKey("acc_id");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("WebApplication1.Models.Bill", b =>
                {
                    b.Property<int>("b_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("b_id"));

                    b.Property<int>("AccId")
                        .HasColumnType("int");

                    b.Property<int>("acc_id")
                        .HasColumnType("int");

                    b.Property<int>("b_status")
                        .HasColumnType("int");

                    b.Property<decimal>("b_total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("created_time")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("b_id");

                    b.HasIndex("AccId");

                    b.ToTable("Bill");
                });

            modelBuilder.Entity("WebApplication1.Models.BillDetail", b =>
                {
                    b.Property<int>("bid_id")
                        .HasColumnType("int");

                    b.Property<int>("b_id")
                        .HasColumnType("int");

                    b.Property<int>("p_id")
                        .HasColumnType("int");

                    b.Property<int>("BillId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("bid_amount")
                        .HasColumnType("int");

                    b.Property<decimal>("bid_payment")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("bid_id", "b_id", "p_id");

                    b.HasIndex("BillId");

                    b.HasIndex("ProductId");

                    b.ToTable("BillDetail");
                });

            modelBuilder.Entity("WebApplication1.Models.Category", b =>
                {
                    b.Property<int>("cate_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cate_id"));

                    b.Property<string>("cate_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("cate_status")
                        .HasColumnType("bit");

                    b.Property<int>("sub_cate")
                        .HasColumnType("int");

                    b.HasKey("cate_id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("WebApplication1.Models.Comments", b =>
                {
                    b.Property<int>("cmt_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cmt_id"));

                    b.Property<int>("AccId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("acc_id")
                        .HasColumnType("int");

                    b.Property<string>("cmt_content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("cmt_count")
                        .HasColumnType("int");

                    b.Property<int>("dislike_count")
                        .HasColumnType("int");

                    b.Property<int>("like_count")
                        .HasColumnType("int");

                    b.Property<int>("p_id")
                        .HasColumnType("int");

                    b.Property<int>("rep_cmt_id")
                        .HasColumnType("int");

                    b.HasKey("cmt_id");

                    b.HasIndex("AccId");

                    b.HasIndex("ProductId");

                    b.ToTable("Comment");
                });

            modelBuilder.Entity("WebApplication1.Models.Producer", b =>
                {
                    b.Property<int>("pro_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("pro_id"));

                    b.Property<string>("pro_description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pro_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("pro_status")
                        .HasColumnType("int");

                    b.HasKey("pro_id");

                    b.ToTable("Producer");
                });

            modelBuilder.Entity("WebApplication1.Models.Product", b =>
                {
                    b.Property<int>("p_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("p_id"));

                    b.Property<int>("AccId")
                        .HasColumnType("int");

                    b.Property<int>("CateId")
                        .HasColumnType("int");

                    b.Property<int>("ProId")
                        .HasColumnType("int");

                    b.Property<int>("acc_id")
                        .HasColumnType("int");

                    b.Property<int>("cate_id")
                        .HasColumnType("int");

                    b.Property<int>("cmt_count")
                        .HasColumnType("int");

                    b.Property<int>("dislike_count")
                        .HasColumnType("int");

                    b.Property<string>("exported_at")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("imported_at")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("like_count")
                        .HasColumnType("int");

                    b.Property<string>("p_description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("p_exported_quantity")
                        .HasColumnType("int");

                    b.Property<string>("p_img1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("p_img1_base64")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("p_img2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("p_img2_base64")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("p_img3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("p_img3_base64")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("p_img4")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("p_img4_base64")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("p_img5")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("p_img5_base64")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("p_imported_quantity")
                        .HasColumnType("int");

                    b.Property<string>("p_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("p_status")
                        .HasColumnType("int");

                    b.Property<string>("p_thumbnail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("p_thumbnail_base64")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("pro_id")
                        .HasColumnType("int");

                    b.HasKey("p_id");

                    b.HasIndex("AccId");

                    b.HasIndex("CateId");

                    b.HasIndex("ProId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("WebApplication1.Models.Bill", b =>
                {
                    b.HasOne("WebApplication1.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("WebApplication1.Models.BillDetail", b =>
                {
                    b.HasOne("WebApplication1.Models.Bill", "Bill")
                        .WithMany("BillDetail")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("WebApplication1.Models.Comments", b =>
                {
                    b.HasOne("WebApplication1.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("WebApplication1.Models.Product", b =>
                {
                    b.HasOne("WebApplication1.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.Producer", "Producer")
                        .WithMany()
                        .HasForeignKey("ProId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Category");

                    b.Navigation("Producer");
                });

            modelBuilder.Entity("WebApplication1.Models.Bill", b =>
                {
                    b.Navigation("BillDetail");
                });

            modelBuilder.Entity("WebApplication1.Models.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
